apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: thought-bubbles-hop-backend
  annotations:
    # nginx ingress
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # cert-manager
    ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: clusterissuer-letsencrypt-production
    # CORS
    #nginx.ingress.kubernetes.io/enable-cors: "true"
    # snippet from https://qa.lsproc.com/post/access-control-allow-origin-multiple-origin-domains
    nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        if ($http_origin ~* (^https?://([^/]+\.)*)) {
            set $cors "true";
        }
        # Nginx doesn't support nested If statements. This is where things get slightly nasty.
        # Determine the HTTP request method used
        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }
        if ($request_method = 'GET') {
            set $cors "${cors}get";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }

        if ($cors = "true") {
            # Catch all incase there's a request method we're not dealing with properly
            add_header 'Access-Control-Allow-Origin' "$http_origin";
        }

        if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }

        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";

            #
            # Om nom nom cookies
            #
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        if ($cors = "truepost") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }

spec:
  rules:
  - host: thought-bubbles-hop-backend-api.onboarding.dev
    http:
      paths:
        - path: /(.*)
          backend:
            serviceName: thought-bubbles-hop-backend
            servicePort: http
  tls:
  - hosts:
    - thought-bubbles-hop-backend-api.onboarding.dev
    secretName: thought-bubbles-hop-backend-tls-secret
